(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))t(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function a(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(r){if(r.ep)return;r.ep=!0;const i=a(r);fetch(r.href,i)}})();class E{constructor(){this.baseURL=""}async fetchWeatherData(e,a){const t=`${this.baseURL}/api/uv-today?lat=${e.lat}&lon=${e.lon}&date=${a}`,r=await fetch(t);if(!r.ok)throw new Error(`Weather API failed: ${r.status}`);return await r.json()}async fetchDailyData(e,a){const t=`${this.baseURL}/api/daily-summary?lat=${e.lat}&lon=${e.lon}&date=${a}`,r=await fetch(t);if(!r.ok)throw new Error(`Daily API failed: ${r.status}`);return await r.json()}async checkForUpdates(e,a,t){const r=`${this.baseURL}/api/uv-today/poll?lat=${e.lat}&lon=${e.lon}&date=${a}&timestamp=${t}`,i=await fetch(r);if(!i.ok)throw new Error(`Poll API failed: ${i.status}`);return i.json()}}class x{constructor(){this.DEFAULT_LOCATION={lat:40.7162,lon:-74.3625,name:"Summit, NJ",isUserLocation:!1}}async getCurrentLocation(){return navigator.geolocation?new Promise(e=>{const a={enableHighAccuracy:!0,timeout:1e4,maximumAge:3e5};navigator.geolocation.getCurrentPosition(async t=>{const r=await this.getLocationName(t.coords.latitude,t.coords.longitude);e({lat:t.coords.latitude,lon:t.coords.longitude,name:r,isUserLocation:!0})},t=>{console.log("Geolocation error:",t.message),e(null)},a)}):(console.log("Geolocation not supported"),null)}getDefaultLocation(){return{...this.DEFAULT_LOCATION}}async getLocationName(e,a){try{const r=await(await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${e}&longitude=${a}&localityLanguage=en`)).json();return r.city&&r.principalSubdivision?`${r.city}, ${r.principalSubdivision}`:r.locality&&r.principalSubdivision?`${r.locality}, ${r.principalSubdivision}`:r.countryName?r.countryName:"Your Location"}catch(t){return console.log("Geocoding error:",t),"Your Location"}}}class I{constructor(e){this.container=e,this.entries=[],this.isVisible=!1,this.maxEntries=50,this.setupPanel()}setupPanel(){var a;const e=document.createElement("div");e.id="debug-panel",e.className="hidden bg-gray-900 text-green-400 p-4 mb-4 rounded-lg font-mono text-xs max-h-64 overflow-y-auto",e.innerHTML=`
      <div class="flex justify-between items-center mb-2">
        <h4 class="text-green-300 font-semibold">Request Debug Log</h4>
        <button id="clear-debug" class="text-red-400 hover:text-red-300">Clear</button>
      </div>
      <div id="debug-log"></div>
    `,this.container.appendChild(e),(a=document.getElementById("clear-debug"))==null||a.addEventListener("click",()=>this.clear())}log(e,a){const r={timestamp:new Date().toLocaleTimeString(),message:e,data:a};this.entries.push(r),this.entries.length>this.maxEntries&&this.entries.shift(),this.updateDisplay()}toggle(){this.isVisible=!this.isVisible;const e=document.getElementById("debug-panel");e==null||e.classList.toggle("hidden",!this.isVisible),this.updateDisplay()}clear(){this.entries=[],this.updateDisplay()}updateDisplay(){if(!this.isVisible)return;const e=document.getElementById("debug-log");e&&(e.innerHTML=this.entries.map(a=>{let t="";return a.data&&(typeof a.data=="object"?t=" | "+JSON.stringify(a.data,null,0):t=" | "+a.data),`<div class="mb-1">[${a.timestamp}] ${a.message}${t}</div>`}).join(""),e.scrollTop=e.scrollHeight)}}function f(o){return o<=2?"#22c55e":o<=5?"#eab308":o<=7?"#f97316":o<=10?"#ef4444":"#8b5cf6"}function b(o){return o<=32?"#3b82f6":o<=50?"#60a5fa":o<74?"#10b981":o<85?"#f97316":o<95?"#ef4444":"#dc2626"}function $(o,e){return new Chart(o.getContext("2d"),{type:"bar",data:{labels:e.labels,datasets:[{label:"UV Index",data:e.uv,backgroundColor:e.uv.map(a=>f(a)),borderColor:e.uv.map(a=>f(a)),borderWidth:1,borderRadius:4,borderSkipped:!1},{label:"UV Index Clear Sky",data:e.uvClearSky,type:"line",borderColor:"#ef4444",backgroundColor:"transparent",borderWidth:2,borderDash:[5,5],fill:!1,pointRadius:0,tension:.3}]},options:{responsive:!1,maintainAspectRatio:!1,animation:!1,plugins:{legend:{display:!0,position:"top",labels:{usePointStyle:!0,padding:10,font:{size:window.innerWidth<640?10:12}}},tooltip:{callbacks:{label:function(a){const t=a.parsed.y;let r="Low";t>10?r="Extreme":t>7?r="Very High":t>5?r="High":t>2&&(r="Moderate");const i=a.dataset.label.includes("Clear Sky")?" (Clear Sky)":"";return`${a.dataset.label}: ${t} (${r})${i}`}}}},scales:{y:{beginAtZero:!0,max:Math.max(12,Math.max(...e.uv)+1),title:{display:window.innerWidth>=640,text:"UV Index"}},x:{title:{display:!1},ticks:{maxRotation:window.innerWidth<640?45:0,callback:function(a,t){return window.innerWidth<640?t%2===0?this.getLabelForValue(a):"":this.getLabelForValue(a)}}}}}})}function A(o,e){return new Chart(o.getContext("2d"),{type:"line",data:{labels:e.labels,datasets:[{label:"Precipitation Probability (%)",data:e.precipitation,borderColor:"#3b82f6",backgroundColor:"rgba(59, 130, 246, 0.2)",borderWidth:2,fill:!0,tension:.3,yAxisID:"y"},{label:"Cloud Cover (%)",data:e.cloudCover,type:"bar",borderColor:"#d1d5db",backgroundColor:"rgba(209, 213, 219, 0.6)",borderWidth:1,yAxisID:"y"},{label:"Temperature (¬∞F)",data:e.temperature,borderColor:"#9ca3af",backgroundColor:"transparent",borderWidth:3,fill:!1,tension:.3,pointRadius:0,segment:{borderColor:a=>{var n,s,l,c;const t=(s=(n=a.p0)==null?void 0:n.parsed)==null?void 0:s.y,r=(c=(l=a.p1)==null?void 0:l.parsed)==null?void 0:c.y;if(typeof t!="number"||typeof r!="number")return;const i=(t+r)/2;return b(i)}},yAxisID:"y1"},{label:"Apparent Temperature (¬∞F)",data:e.apparentTemperature,borderColor:"#6b7280",backgroundColor:"transparent",borderWidth:2,borderDash:[5,5],fill:!1,tension:.3,pointRadius:0,segment:{borderColor:a=>{var n,s,l,c;const t=(s=(n=a.p0)==null?void 0:n.parsed)==null?void 0:s.y,r=(c=(l=a.p1)==null?void 0:l.parsed)==null?void 0:c.y;if(typeof t!="number"||typeof r!="number")return;const i=(t+r)/2;return b(i)}},yAxisID:"y1"},{label:"Humidity (%)",data:e.humidity,borderColor:"#10b981",backgroundColor:"transparent",borderWidth:2,borderDash:[2,2],fill:!1,tension:.3,yAxisID:"y"}]},options:{responsive:!1,maintainAspectRatio:!1,animation:!1,plugins:{legend:{display:!0,position:"top"},tooltip:{mode:"index",intersect:!1}},scales:{y:{type:"linear",display:!0,position:"left",beginAtZero:!0,max:100,title:{display:window.innerWidth>=640,text:"Percentage"}},y1:{type:"linear",display:!0,position:"right",title:{display:window.innerWidth>=640,text:"Temperature (¬∞F)"},grid:{drawOnChartArea:!1}},x:{title:{display:!1},ticks:{maxRotation:window.innerWidth<640?45:0,callback:function(a,t){return window.innerWidth<640?t%2===0?this.getLabelForValue(a):"":this.getLabelForValue(a)}}}}}})}class P{constructor(){this.api=new E,this.locationService=new x,this.currentLocation=this.locationService.getDefaultLocation(),this.currentDate=new Date().toLocaleDateString("en-CA"),this.uvChart=null,this.weatherChart=null,this.refreshTimer=null,this.refreshInFlight=!1,this.REFRESH_INTERVAL_MS=30*60*1e3}async initialize(){this.debugPanel=new I(document.body),this.setupEventListeners(),await this.loadData(),this.scheduleAutoRefresh()}setupEventListeners(){var a,t;const e=document.getElementById("debug-btn");e==null||e.addEventListener("click",()=>this.debugPanel.toggle()),(a=document.getElementById("prev-day"))==null||a.addEventListener("click",()=>this.navigateDate(-1)),(t=document.getElementById("next-day"))==null||t.addEventListener("click",()=>this.navigateDate(1))}async loadData(e=!1){var t,r,i,n,s,l,c,h,p,g,w;const a=e?"auto-refresh":"user-initiated";this.debugPanel.log(`Loading UV data for ${this.currentDate}`,{reason:a});try{const m=await this.locationService.getCurrentLocation();m&&(this.currentLocation=m);const u=this.currentLocation.isUserLocation?"üìç ":"",y=document.getElementById("location-display");y&&(y.textContent=`${u}${this.currentLocation.name}`);const d=await this.api.fetchWeatherData(this.currentLocation,this.currentDate),v=(t=d.metadata)!=null&&t.cached?"hit":"miss";this.debugPanel.log(`UV API response: ${v}`,{cached:(r=d.metadata)==null?void 0:r.cached,cacheAge:(i=d.metadata)==null?void 0:i.cacheAge,lastUpdated:(n=d.metadata)==null?void 0:n.lastUpdated}),e||((s=document.getElementById("loading"))==null||s.style.setProperty("display","none"),(l=document.getElementById("current-conditions"))==null||l.classList.remove("hidden"),(c=document.getElementById("chart-container"))==null||c.classList.remove("hidden"),(h=document.getElementById("weather-chart-container"))==null||h.classList.remove("hidden"),(p=document.getElementById("legend"))==null||p.classList.remove("hidden"));const C=new Date(d.date+"T00:00:00").toLocaleDateString("en-US",{weekday:"long",month:"long",day:"numeric"}),L=document.getElementById("date-display");L&&(L.textContent=C),this.updateCurrentConditions(d),this.renderCharts(d)}catch(m){if(this.debugPanel.log("Load error",{error:m.message}),!e){(g=document.getElementById("loading"))==null||g.style.setProperty("display","none"),(w=document.getElementById("error"))==null||w.classList.remove("hidden");const u=document.getElementById("error-message");u&&(u.textContent=m.message)}}}updateCurrentConditions(e){var r,i,n,s;const a=new Date().toLocaleDateString("en-CA");if(this.currentDate===a){(r=document.getElementById("dual-display"))==null||r.classList.remove("hidden"),(i=document.getElementById("single-display"))==null||i.classList.add("hidden");const c=new Date().getHours();let h=0;for(let u=0;u<e.labels.length;u++){const y=e.labels[u],d=parseInt(y.split(":")[0]),v=y.includes("PM"),D=v&&d!==12?d+12:!v&&d===12?0:d;if(D===c){h=u;break}else if(D>c){h=Math.max(0,u-1);break}}const p=Math.round(e.temperature[h]||0),g=(e.uv[h]||0).toFixed(1),w=Math.round(e.precipitation[h]||0),m=Math.round(e.humidity[h]||0);this.updateElement("current-temp-dual",`${p}¬∞F`),this.updateElement("current-uv-dual",g),this.updateElement("current-precip-dual",`${w}%`),this.updateElement("current-humidity-dual",`${m}%`),this.setElementColor("current-uv-dual",f(parseFloat(g))),this.setElementColor("current-temp-dual",b(p)),this.updateTodaysForecast()}else(n=document.getElementById("dual-display"))==null||n.classList.add("hidden"),(s=document.getElementById("single-display"))==null||s.classList.remove("hidden"),this.updateDailySummary()}async updateTodaysForecast(){var e,a;try{const t=await this.api.fetchDailyData(this.currentLocation,this.currentDate);this.debugPanel.log("Daily API response",{cached:(e=t.metadata)==null?void 0:e.cached,cacheAge:(a=t.metadata)==null?void 0:a.cacheAge});const r=Math.round(t.tempMax||0),i=Math.round(t.tempMin||0),n=(t.uvMax||0).toFixed(1),s=Math.round(t.precipMax||0);this.updateElement("today-temp-dual",`${r}¬∞/${i}¬∞F`),this.updateElement("today-uv-dual",n),this.updateElement("today-precip-dual",`${s}%`),this.setElementColor("today-uv-dual",f(parseFloat(n))),this.setElementColor("today-temp-dual",b(r))}catch(t){this.debugPanel.log("Today forecast error",{error:t.message})}}async updateDailySummary(){var e,a;try{const t=await this.api.fetchDailyData(this.currentLocation,this.currentDate);this.debugPanel.log("Daily summary API",{cached:(e=t.metadata)==null?void 0:e.cached,cacheAge:(a=t.metadata)==null?void 0:a.cacheAge});const r=Math.round(t.tempMax||0),i=Math.round(t.tempMin||0),n=(t.uvMax||0).toFixed(1),s=Math.round(t.precipMax||0),l=Math.round(t.humidityMax||0);this.updateElement("current-temp",`${r}¬∞/${i}¬∞F`),this.updateElement("current-uv",n),this.updateElement("current-precip",`${s}%`),this.updateElement("current-humidity",`${l}%`),this.setElementColor("current-uv",f(parseFloat(n))),this.setElementColor("current-temp",b(r))}catch(t){this.debugPanel.log("Daily summary error",{error:t.message})}}renderCharts(e){this.uvChart&&this.uvChart.destroy(),this.weatherChart&&this.weatherChart.destroy();const a=document.getElementById("uvChart"),t=document.getElementById("weatherChart");a&&t&&(a.style.width="100%",a.style.height="384px",a.width=a.offsetWidth,a.height=384,t.style.width="100%",t.style.height="384px",t.width=t.offsetWidth,t.height=384,this.uvChart=$(a,e),this.weatherChart=A(t,e))}scheduleAutoRefresh(){this.refreshTimer&&clearInterval(this.refreshTimer),this.debugPanel.log("Scheduled 30-min auto-refresh timer"),this.refreshTimer=window.setInterval(async()=>{const e=new Date().toLocaleDateString("en-CA");if(this.currentDate===e&&(this.currentDate=e),this.refreshInFlight){this.debugPanel.log("Auto-refresh skipped: request in flight");return}this.refreshInFlight=!0;try{this.debugPanel.log("30-min auto-refresh triggered"),await this.loadData(!0)}finally{this.refreshInFlight=!1}},this.REFRESH_INTERVAL_MS)}navigateDate(e){const[a,t,r]=this.currentDate.split("-").map(Number),i=new Date(a,t-1,r);i.setDate(i.getDate()+e);const n=new Date;n.setHours(0,0,0,0);const s=new Date(n);if(s.setDate(s.getDate()+16),i>=n&&i<=s){const l=i.toLocaleDateString("en-CA");this.debugPanel.log(`Date navigation: ${this.currentDate} ‚Üí ${l}`,{direction:e}),this.currentDate=l,this.loadData()}}updateElement(e,a){const t=document.getElementById(e);t&&(t.textContent=a)}setElementColor(e,a){const t=document.getElementById(e);t&&(t.style.color=a)}}document.addEventListener("DOMContentLoaded",()=>{new P().initialize().catch(console.error)});"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.js").then(o=>{console.log("SW registered: ",o)}).catch(o=>{console.log("SW registration failed: ",o)})});
